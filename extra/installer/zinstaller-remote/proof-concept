#!/bin/bash

USERNAME=foo
PASSWORD=foo2
URL=remote.zentyal.com

function parse_bundles () {
}

RESPONSE=$(curl -u $USERNAME:$PASSWORD -k https://$URL/api/v1/bundle/available/$USERNAME/)

if [ "$RESPONSE" == "Authorization Required" ]
then
    echo "Invalid username or password"
    exit 1
elif [ "$RESPONSE" == "[]" ]
then
    echo "Community edition is going to be installed. Your server will be registered automatically"
else
then
    NUM_BUNDLES=$(echo "$RESPONSE" | grep '{' | wc -l)
    parse_bundles $RESPONSE
    if [ $NUM_BUNDLES -eq 1 ]
    then
        echo "Autoselecting bundle FIXME..."
    else
        echo "Showing bundle list fixme..."
    fi
    # grep for:
    #   "company": "$companyname",
    #   "name": "$name",
    #   "id": 666,
fi


# save id in $ID for next step
# use hostname for server name when registering...


curl -u $USERNAME:$PASSWORD -k --data "name=$HOSTNAME&bundle_id=$ID" https://$URL/api/v1/servers/

devuelve: { name:, company:, uuid:, password, created, cloud_domain }

PARA LAS QA UPDATES:

user: company-name
password: uuid
host: qa.$cloud_domain

# check if there are backups: https://confbackup.cloud.zentyal.com/conf-backup/meta/all/
# it should return 404 if there are not
# needs /v1/servers/<uuid>|<name>/ JSON?

curl -u $USERNAME:$PASSWORD -k --data "name=$HOSTNAME&bundle_id=$ID" https://$URL/api/v1/servers/

# y finalmente en second stage resuscribir reutilizando user, password, servername y bundle_id (si aplica) guardados previamente
