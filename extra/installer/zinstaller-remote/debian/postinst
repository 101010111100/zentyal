#!/bin/sh

set -e

. /usr/share/debconf/confmodule

URL=api.cloud.zentyal.com

get_field()
{
    INPUT=$1
    FIELD=$2
    echo $INPUT | tr ',' "\n" | grep "\"$FIELD\"" | cut -d: -f2 | cut -d\" -f2
}

get_num_field()
{
    get_field "$1" "$2" | sed 's/^ //'
}

DATA_DIR=/tmp/zinstaller-remote

mkdir -p $DATA_DIR

db_get netcfg/get_hostname || true
SERVERNAME="$RET"
if [ -z "$SERVERNAME" ]
then
    SERVERNAME=$HOSTNAME
fi

while [ -z "$EDITION" ]
do
    db_input high zinstaller-remote/user || true
    db_go || true
    db_get zinstaller-remote/user
    USERNAME="$RET"

    db_input high zinstaller-remote/pass || true
    db_go || true
    db_get zinstaller-remote/pass
    PASSWORD="$RET"

    RESPONSE=$(curl -u $USERNAME:$PASSWORD -k https://$URL/v1/bundle/available/$SERVERNAME/)

    if [ "$RESPONSE" != "Authorization Required" ]
    then
        if [ "$RESPONSE" = "[]" ]
        then
            EDITION="community"
        else
            EDITION="commercial"
        fi
        break
    fi

    db_input high zinstaller-remote/auth_failed || true
    db_go || true
    db_get zinstaller-remote/auth_failed
    if [ "$RET" = "false" ]
    then
        break
    fi
done

if [ "$EDITION" = "commercial" ]
then

    if [ -f /tmp/RECOVER_MODE ]
    then
        RESPONSE=$(curl -u $USERNAME:$PASSWORD -k https://$URL/v1/servers/)

        choices=$(echo $RESPONSE | grep : | cut -d\" -f2 | sort | tr "\n" ',' | sed 's/,$//' | sed 's/,/, /g')
        db_subst zinstaller-remote/select_hostname_recover CHOICES "$choices"
        db_input high zinstaller-remote/select_hostname_recover || true
        db_go || true

        db_get zinstaller-remote/select_hostname_recover
        SERVERNAME=$(echo $RET | cut -d' ' -f1)
    fi

    rm -f $DATA_DIR/BUNDLE_IDS

    # JSON formatting seems to change, so whe remove all new lines
    RESPONSE=$(echo "$RESPONSE" | tr "\n" ' ')

    echo $RESPONSE | sed "s/},/\n/g" | while read line
    do
        BUNDLE="$line"

        company=$(get_field "$line" company)
        name=$(get_field "$line" name)
        id=$(get_num_field "$line" id)

        if [ -n "$company" ]
        then
            echo "$id:\"$company - $name\"" >> $DATA_DIR/BUNDLE_IDS
        else
            echo "$id:\"$name\"" >> $DATA_DIR/BUNDLE_IDS
        fi
    done

    NUM_BUNDLES=$(wc -l $DATA_DIR/BUNDLE_IDS | cut -d' ' -f1)
    if [ $NUM_BUNDLES -eq 1 ]
    then
        BUNDLE_ID=$(cut -d: -f1 $DATA_DIR/BUNDLE_IDS)
        if grep "Enterprise" $DATA_DIR/BUNDLE_IDS
        then
            db_input high zinstaller-remote/auth_ok_enterprise || true
        else
            db_input high zinstaller-remote/auth_ok_sb || true
        fi
        db_go || true
    else
        choices=$(cut -d: -f2 $DATA_DIR/BUNDLE_IDS | cut -d\" -f2 | sort | uniq | tr "\n" ',' | sed 's/,$//' | sed 's/,/, /g')
        db_subst zinstaller-remote/select_bundle CHOICES "$choices"
        db_input high zinstaller-remote/select_bundle || true
        db_go || true

        db_get zinstaller-remote/select_bundle
        BUNDLE="$RET"
        BUNDLE_ID=$(grep "\"$BUNDLE\"" $DATA_DIR/BUNDLE_IDS | cut -d: -f1)
    fi

    # Get subscription data
    RESPONSE=$(curl -u $USERNAME:$PASSWORD -k --data "name=$SERVERNAME&bundle=$BUNDLE_ID&sync=1" https://$URL/v1/servers/)
    QA_USERNAME="$USERNAME-$SERVERNAME"
    QA_PASSWORD=$(get_field "$RESPONSE" password)
    UUID=$(get_field "$RESPONSE" uuid)

    echo $QA_USERNAME > $DATA_DIR/QA_USERNAME
    echo $QA_PASSWORD > $DATA_DIR/QA_PASSWORD
    touch $DATA_DIR/COMMERCIAL_EDITION
fi

if [ -f /tmp/RECOVER_MODE ]
then
    if [ "$EDITION" = "commercial" ]
    then
        RESPONSE=$(curl -u $UUID:$QA_PASSWORD -k https://confbackup.cloud.zentyal.com/conf-backup/meta/all/)
        if [ $? = 0 ] && [ -z "$RESPONSE" ]
        then
            db_input high zinstaller-remote/error_backups || true
            rm -f /tmp/RECOVER_MODE
        fi
    else
        db_input high zinstaller-remote/error_dr || true
        db_go || true
        rm -f /tmp/RECOVER_MODE
    fi
else
    if [ "$EDITION" = "community" ]
    then
        db_input high zinstaller-remote/auth_ok_community || true
        db_go || true
    elif [ -z "$EDITION" ]
    then
        db_input high zinstaller-remote/no_register || true
        db_go || true
        exit 0
    fi
fi

echo $USERNAME > $DATA_DIR/REGISTER_USERNAME
echo $PASSWORD > $DATA_DIR/REGISTER_PASSWORD
echo $SERVERNAME > $DATA_DIR/REGISTER_SERVERNAME

if [ $NUM_BUNDLES -gt 1 ]
then
    echo $BUNDLE_ID > $DATA_DIR/REGISTER_BUNDLE_ID
fi

exit 0
